<Window x:Class="EmbyJellyfin_Playlist_Exporter.MainWindow"
         x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EmbyJellyfin_Playlist_Exporter"
        mc:Ignorable="d"
        Title="Emby/Jellyfin Playlist Exporter" Height="700" Width="675" Background="Linen">
    <Window.Resources>
        <Style x:Key="CustomListBoxStyle" TargetType="ListBox">
            <Setter Property="Background" Value="#f0f0f0" />
            <Setter Property="BorderBrush" Value="#D3D3D3" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="10" />
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Background" Value="#0078D4" />
                                <Setter Property="Foreground" Value="White" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomLabelStyle" TargetType="Label">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#333333" />
            <Setter Property="Margin" Value="0,10,0,5" />
        </Style>
        <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
            <!-- General Properties -->
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#D3D3D3"/>
            <Setter Property="BorderThickness" Value="1"/>

            <!-- Define ControlTemplate for the TextBox -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <!-- Background border of TextBox -->
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
                            </Border>

                            <!-- VisualStateManager to handle focus, mouse over and disabled states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!-- Normal state: Default appearance -->
                                    <VisualState x:Name="Normal"/>

                                    <!-- MouseOver state: When the mouse is over the TextBox -->
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#F0F0F0" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#A6A6A6" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Focused state: When the TextBox is focused -->
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#0078D4" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Disabled state: When the TextBox is disabled -->
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#F2F2F2" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#BFBFBF" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#0078D4" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="BorderBrush" Value="#0078D4" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#005B9E" />
                    <Setter Property="BorderBrush" Value="#005B9E" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="#004B80" />
                    <Setter Property="BorderBrush" Value="#004B80" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="Black" />
            <Setter Property="BorderBrush" Value="#D3D3D3" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="8" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="#333333" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="30" />
            <Style.Triggers>
                <Trigger Property="IsDropDownOpen" Value="True">
                    <Setter Property="BorderBrush" Value="#0078D4" />
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#0078D4" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <!-- Define the CheckBox's appearance using a ControlTemplate -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!-- CheckBox background and border -->
                            <Border x:Name="Border" Background="White" BorderBrush="#D3D3D3" BorderThickness="1" Padding="5">
                                <Grid>
                                    <!-- The box itself -->
                                    <Path x:Name="CheckMark" Data="M0,5 L5,10 L10,0" Stroke="Transparent" StrokeThickness="2" />
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Grid>
                            </Border>

                            <!-- VisualStateManager to handle checked and mouse over states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#F0F0F0" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="CheckBoxStates">
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#0078D4" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Path.Stroke).(Color)"
                                                    To="White" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#D3D3D3"/>
            <Setter Property="BorderThickness" Value="1"/>

            <!-- ControlTemplate with VisualStateManager -->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Grid>
                            <!-- PasswordBox border -->
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Padding="5">
                                <ScrollViewer x:Name="PART_ContentHost" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"/>
                            </Border>

                            <!-- VisualStateManager to manage focus, mouse over and disabled states -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <!-- Normal state: when the PasswordBox is in its default state -->
                                    <VisualState x:Name="Normal"/>

                                    <!-- MouseOver state: when the mouse is over the PasswordBox -->
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#F0F0F0" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#A6A6A6" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Focused state: when the PasswordBox is focused -->
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="White" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#0078D4" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!-- Disabled state: when the PasswordBox is disabled -->
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                    To="#F2F2F2" Duration="0:0:0.2"/>
                                            <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                    To="#BFBFBF" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#D1D1D1" Offset="0.0"/>
                <!-- Light gray -->
                <GradientStop Color="#A9A9A9" Offset="0.5"/>
                <!-- Medium gray -->
                <GradientStop Color="#D1D1D1" Offset="1.0"/>
                <!-- Light gray -->
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="24*"/>
        </Grid.ColumnDefinitions>
        <Menu x:Name="menu" Grid.Column="1" Margin="648,0,0,0" RenderTransformOrigin="0.5,0.5">
            <Menu.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="-1"/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Menu.RenderTransform>
            <MenuItem Header="_File">
                <MenuItem x:Name="removeSettings" Header="_Remove Settings" Click="RemoveSettings_Click" />
                <MenuItem x:Name="saveSettings" Header="_Save Settings" Click="SaveSettings_Click" />
                <Separator />
                <MenuItem Header="_Exit" />
            </MenuItem>
        </Menu>
        <Label x:Name="lblServerType" Style="{StaticResource CustomLabelStyle}" Content="Server Type" HorizontalAlignment="Left" Margin="0,13,0,0" VerticalAlignment="Top" Grid.Column="1"/>
        <ComboBox x:Name="lstServerType" Style="{StaticResource CustomComboBoxStyle}" Height="34" HorizontalAlignment="Left" Margin="105,13,0,0" VerticalAlignment="Top" Width="391" SelectionChanged="LstServerType_SelectionChanged" SelectedIndex="2" Grid.Column="1"/>
        <Label x:Name="lblURL" Style="{StaticResource CustomLabelStyle}" Content="URL" HorizontalAlignment="Left" Margin="0,50,0,0" VerticalAlignment="Top" Grid.Column="1" />
        <TextBox x:Name="txtURL" HorizontalAlignment="Left" Height="23" Margin="105,55,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="392" TextChanged="TxtURL_TextChanged" Grid.Column="1"/>
        <Label x:Name="lblAPIKey" Style="{StaticResource CustomLabelStyle}" Content="API Key" Height="34" HorizontalAlignment="Left" Margin="0,90,0,0" VerticalAlignment="Top" Grid.Column="1"/>
        <PasswordBox x:Name="txtAPIKey" HorizontalAlignment="Left" Height="23" Margin="105,93,0,0" VerticalAlignment="Top" Width="392" Grid.Column="1"/>
        <Button x:Name="btnConnect" Style="{StaticResource CustomButtonStyle}" Content="Connect" HorizontalAlignment="Left" Margin="515,88,0,0" VerticalAlignment="Top" Width="113" Click="BtnConnect_Click" Grid.Column="1"/>
        <Label Name="lblUserAccount" Style="{StaticResource CustomLabelStyle}" Content="User" HorizontalAlignment="Left" Margin="0,130,0,0" VerticalAlignment="Top" Grid.Column="1"/>
        <ComboBox x:Name="lstUserAccounts" Style="{StaticResource CustomComboBoxStyle}" Height="34" HorizontalAlignment="Left" Margin="105,133,0,0" VerticalAlignment="Top" Width="391" SelectionChanged="LstUserAccounts_SelectionChanged" Grid.Column="1"/>
        <Label x:Name="lstUserAccountsDemoMode" Style="{StaticResource CustomLabelStyle}" Height="34" Background="Black" Visibility="Hidden" HorizontalAlignment="Left" Margin="105,133,0,0" VerticalAlignment="Top" Width="391" Grid.Column="1"/>
        <Label x:Name="lblSaveLocation" Style="{StaticResource CustomLabelStyle}" Content="Save Path" HorizontalAlignment="Left" Margin="0,170,10,10" VerticalAlignment="Top" Grid.Column="1"/>
        <TextBox x:Name="txtSaveLocation" HorizontalAlignment="Left" Height="23" Margin="105,175,0,0" VerticalAlignment="Top" Width="392" IsReadOnly="True" Grid.Column="1"/>
        <Button x:Name="btnSaveLocation" Style="{StaticResource CustomButtonStyle}" Content="..." HorizontalAlignment="Left" Margin="515,171,0,0" VerticalAlignment="Top" Width="74" Click="BtnChooseSaveLocation_Click" Grid.Column="1"/>
        <CheckBox x:Name="chkSelectAllNone" Content="Select All/None" Margin="3,220,0,0" Checked="ChkSelectAllNone_Checked" Grid.Column="1"/>
        <ListBox x:Name="lstPlaylists"  Style="{StaticResource CustomListBoxStyle}" SelectionChanged="LstPlaylist_Selected" HorizontalAlignment="Left" Height="370" Margin="2,245,0,0" VerticalAlignment="Top" Width="496" SelectionMode="Multiple" Grid.Column="1" />
        <Button x:Name="btnExportPlaylists" Style="{StaticResource CustomButtonStyle}" Content="Export" HorizontalAlignment="Left" Margin="515,246,0,0" VerticalAlignment="Top" Width="75" Click="BtnExportPlaylists_Click" Visibility="Hidden" Grid.Column="1"/>
    </Grid>
</Window>
